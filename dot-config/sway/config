# Default config for sway
#
# Copy this to ~/.config/sway/config and edit it to your liking.
#
# Read `man 5 sway` for a complete reference.

### Variables
#
# Logo key. Use Mod1 for Alt.
set $mod Mod4

font pango:monospace 15px

# Home row direction keys, like vim
set $left h
set $down j
set $up k
set $right l

# Tool preferences
set $term alacritty
set $lock 'swaylock -f -c 000000'
set $menu dmenu_path | dmenu | xargs swaymsg exec --
#set $term cosmic-term

# Window borders
default_border none
default_floating_border normal
hide_edge_borders smart

for_window [window_type="dialog"] floating enable
for_window [window_role="dialog"] floating enable


exec swayidle -w \
        timeout 300 $lock \
        timeout 600 'swaymsg "output * power off"' resume 'swaymsg "output * power on"' \
        before-sleep $lock


input "type:keyboard" {
    xkb_layout gb
}

input "16700:8467:Dell_KB216_Wired_Keyboard" {
    xkb_layout us,il
    xkb_options grp:rctrl_toggle
}

set $laptop_display 'BOE 0x0C3F Unknown'
set $home_monitor 'BNQ BenQ GL2760 W4G01988019'
set $work_monitor 'LG Electronics LG HDR 4K 0x00018916'

output $laptop_display pos 1920 0 scale 1.5
output $home_monitor pos 0 0
output $work_monitor scale 1.7

# Hopefully pin the workspaces to secondary monitor if they are attached, so
# they don't all pile onto the laptop screen after ondocking and redocking.
workspace 1 output $laptop_display
workspace 2 output $work_monitor
workspace 2 output $home_monitor
workspace 3 output $work_monitor
workspace 3 output $home_monitor
workspace 4 output $work_monitor
workspace 4 output $home_monitor

### Key bindings
    # Start a terminal
    bindsym $mod+Return exec $term
    bindsym $mod+b exec firefox
    bindsym $mod+p exec logos

    # Kill focused window
    bindsym $mod+Shift+q kill

    # Start your launcher
    bindsym $mod+d exec $menu
    bindsym $mod+x exec "wofi --modi drun,run --show drun"

    bindsym --locked XF86AudioLowerVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%- -l 1.2
    bindsym --locked XF86AudioRaiseVolume exec wpctl set-volume @DEFAULT_AUDIO_SINK@ 5%+ -l 1.2
    bindsym --locked XF86AudioMute exec wpctl set-mute @DEFAULT_AUDIO_SINK@ toggle
    bindsym --locked XF86AudioMicMute exec wpctl set-mute @DEFAULT_AUDIO_SOURCE@ toggle
    bindsym --locked XF86MonBrightnessUp exec brightnessctl s 10%+
    bindsym --locked XF86MonBrightnessDown exec brightnessctl s 10%-
    bindsym --locked XF86AudioPlay exec playerctl play-pause
    bindsym --locked XF86AudioNext exec playerctl next
    bindsym --locked XF86AudioPrev exec playerctl previous

    # Drag floating windows by holding down $mod and left mouse button.
    # Resize them with right mouse button + $mod.
    # Despite the name, also works for non-floating windows.
    # Change normal to inverse to use left mouse button for resizing and right
    # mouse button for dragging.
    floating_modifier $mod normal

    # Reload the configuration file
    bindsym $mod+Shift+c reload

    # Notifications
    bindsym $mod+Ctrl+Space exec makoctl dismiss
    bindsym $mod+Ctrl+Shift+Space exec makoctl dismiss --all
#
# Moving around:
#
    # Move your focus around
    bindsym $mod+$left focus left
    bindsym $mod+$down focus down
    bindsym $mod+$up focus up
    bindsym $mod+$right focus right
    # Or use $mod+[up|down|left|right]
    bindsym $mod+Left focus left
    bindsym $mod+Down focus down
    bindsym $mod+Up focus up
    bindsym $mod+Right focus right

    # Move the focused window with the same, but add Shift
    bindsym $mod+Shift+$left move left
    bindsym $mod+Shift+$down move down
    bindsym $mod+Shift+$up move up
    bindsym $mod+Shift+$right move right
    # Ditto, with arrow keys
    bindsym $mod+Shift+Left move left
    bindsym $mod+Shift+Down move down
    bindsym $mod+Shift+Up move up
    bindsym $mod+Shift+Right move right
#
# Workspaces:
#
    # Switch to workspace
    bindsym $mod+1 workspace number 1
    bindsym $mod+2 workspace number 2
    bindsym $mod+3 workspace number 3
    bindsym $mod+4 workspace number 4
    bindsym $mod+5 workspace number 5
    bindsym $mod+6 workspace number 6
    bindsym $mod+7 workspace number 7
    bindsym $mod+8 workspace number 8
    bindsym $mod+9 workspace number 9
    bindsym $mod+0 workspace number 10
    # Move focused container to workspace
    bindsym $mod+Shift+1 move container to workspace number 1
    bindsym $mod+Shift+2 move container to workspace number 2
    bindsym $mod+Shift+3 move container to workspace number 3
    bindsym $mod+Shift+4 move container to workspace number 4
    bindsym $mod+Shift+5 move container to workspace number 5
    bindsym $mod+Shift+6 move container to workspace number 6
    bindsym $mod+Shift+7 move container to workspace number 7
    bindsym $mod+Shift+8 move container to workspace number 8
    bindsym $mod+Shift+9 move container to workspace number 9
    bindsym $mod+Shift+0 move container to workspace number 10
    # Note: workspaces can have any name you want, not just numbers.
    # We just use 1-10 as the default.
#
# Layout stuff:
#
    # You can "split" the current object of your focus with
    # $mod+b or $mod+v, for horizontal and vertical splits
    # respectively.
    bindsym $mod+z splith
    bindsym $mod+v splitv

    # Switch the current container between different layout styles
    bindsym $mod+s layout stacking
    bindsym $mod+w layout tabbed
    bindsym $mod+e layout toggle split

    # Make the current focus fullscreen
    bindsym $mod+f fullscreen

    # Toggle the current focus between tiling and floating mode
    bindsym $mod+Shift+space floating toggle

    # Swap focus between the tiling area and the floating area
    bindsym $mod+space focus mode_toggle

    # Move focus to the parent container
    bindsym $mod+a focus parent
#
# Scratchpad:
#
    # Sway has a "scratchpad", which is a bag of holding for windows.
    # You can send windows there and get them back later.

    # Move the currently focused window to the scratchpad
    bindsym $mod+Shift+minus move scratchpad

    # Show the next scratchpad window or hide the focused scratchpad window.
    # If there are multiple scratchpad windows, this command cycles through them.
    bindsym $mod+minus scratchpad show
#
# Resizing containers:
#
mode "resize" {
    # left will shrink the containers width
    # right will grow the containers width
    # up will shrink the containers height
    # down will grow the containers height
    bindsym $left resize shrink width 10px
    bindsym $down resize grow height 10px
    bindsym $up resize shrink height 10px
    bindsym $right resize grow width 10px

    # Ditto, with arrow keys
    bindsym Left resize shrink width 10px
    bindsym Down resize grow height 10px
    bindsym Up resize shrink height 10px
    bindsym Right resize grow width 10px

    # Return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+r mode "resize"

set $mode_system System: (l)ock, (e) logout, (s)uspend, (h)ibernate, (r)eboot, (S)hutdown, (R) UEFI
mode "$mode_system" {
    bindsym l exec $lock, mode "default"
    bindsym e exit
    bindsym s exec --no-startup-id systemctl suspend, mode "default"
    bindsym h exec --no-startup-id systemctl hibernate, mode "default"
    bindsym r exec --no-startup-id systemctl reboot, mode "default"
    bindsym Shift+s exec --no-startup-id systemctl poweroff -i, mode "default"
    bindsym Shift+r exec --no-startup-id systemctl reboot --firmware-setup, mode "default"

    # return to default mode
    bindsym Return mode "default"
    bindsym Escape mode "default"
}
bindsym $mod+Shift+e mode "$mode_system"

#
# Status Bar:
#
# Read `man 5 sway-bar` for more information about this section.
bar swaybar_command waybar

# NetworkManager is the most popular way to manage wireless networks on Linux,
# and nm-applet is a desktop environment-independent system tray GUI for it.
exec --no-startup-id mako
exec --no-startup-id nm-applet
exec --no-startup-id blueman-applet &
exec --no-startup-id /run/current-system/sw/libexec/polkit-gnome-authentication-agent-1 &
exec_always nitrogen --restore

## Screenshots
bindsym Print exec --no-startup-id grim $(xdg-user-dir PICTURES)/$(date +'%s_screenshot.png')
bindsym $mod+Print exec --no-startup-id grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" $(xdg-user-dir PICTURES)/$(date +'%s_screenshot.png')
bindsym Shift+Print exec --no-startup-id grim -g "$(slurp)" $(xdg-user-dir PICTURES)/$(date +'%s_screenshot.png')

## Clipboard Screenshots
bindsym Ctrl+Print exec --no-startup-id grim - | wl-copy
bindsym Ctrl+$mod+Print exec --no-startup-id grim -g "$(swaymsg -t get_tree | jq -j '.. | select(.type?) | select(.focused).rect | "\(.x),\(.y) \(.width)x\(.height)"')" - | wl-copy
bindsym Ctrl+Shift+Print exec --no-startup-id grim -g "$(slurp)" - | wl-copy

# Suspend
bindsym $mod+Shift+period exec systemctl suspend

include /etc/sway/config.d/*
